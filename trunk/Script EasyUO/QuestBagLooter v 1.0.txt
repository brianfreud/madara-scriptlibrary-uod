;============================================
; Script Name: Quest Bag Looter
; Author: Garath
; Version: 1.01
; Client Tested with: 5.0.9.1
; EUO version tested with: 1.50 (110)
; Shard OSI / FS:  OSI
; Revision Date: Apr-17-07
; Public Release: Apr-14-07
; Purpose: Find all the good loot left in quest bags in Heartwood
;       Uses Bad Maniac's Item Eval script to select what to keep
;============================================
;
;=-=-=-=-=-=-Instructions-=-=-=-=-=-=
;
; Locate a bagful of quest bags in Heartwood or fill one with
; many you find on the ground.  Have a second container (your backpack for example)
; to place the good stuff in.  Also have a third container to throw all the trash in.
; IMPORTANT!! None of these 3 containers can be inside of each other.
; Push play and follow the prompts to select the 3 containers.
;
; User defined variables here
set %mineval 24   ;set to the minimum value for BadManiac's autoeval script
set %allrecipes #true  ;set to #false if you only want rare recipes
set #lpc 1000  ;lower as needed for your system
; Do not edit below this line

set %recipes PIP
set %contype CUD_HKF_ZJF

set #ltargetkind 1
set #targcurs 1
display ok Target source bag
while #targcurs = 1
 wait 0
set %sourcebag #ltargetid
set #lobjectid %sourcebag
event macro 17 0
wait 20

set #ltargetkind 1
set #targcurs 1
display ok Target keeper bag
while #targcurs = 1
 wait 0
set %keeperbag #ltargetid

set #ltargetkind 1
set #targcurs 1
display ok Target trash bag
while #targcurs = 1
 wait 0
set %trashbag #ltargetid

start:
finditem %contype C_ , %sourcebag
if #findcnt < 1
   {
   set %pack %sourcebag
   gosub sorter
   halt
   }
set %pack #findid
gosub sorter
exevent drag %pack
wait 10
exevent dropc %trashbag
wait 10
ignoreitem %pack 1
ignoreitem reset 2
goto start
         
sub sorter
set #lobjectid %pack
event macro 17 0
wait 20
finditem * C_ , %pack
if #findkind = -1
   return
while #findindex < #findcnt + 1
{
 if #findtype in %contype
    {
    exevent drag #findid #findstack
    wait 10
    exevent dropc %sourcebag
    wait 10
    }
 if #findtype = UFG || #findtype = ZFG
    gosub moveit
 if #findtype in %recipes
    {
    if %allrecipes = #true
    	{
    	gosub moveit
    	goto moved
    	}
    event property #findid
    if ( feywood in #property ) || ( reaper in #property ) || ( faerie in #property ) || ( blight , #spc , gripped in #property ) || ( woven in #property )
       + || ( bramble in #property ) || ( phantom in #property ) || ( cold , #spc , forged in #property ) || ( crown in #property ) || ( acid  in #property )
       + || ( thrasher in #property ) || ( bracer in #property ) || ( scrapper in #property ) || ( pendant in #property ) || ( mischief in #property )
       + || ( luminous in #property ) || ( essence in #property ) || ( silver in #property ) || ( knowledge in #property ) || ( singing in #property )
       + || ( overseer in #property ) || ( luckblade in #property ) || ( adventurer in #property ) || ( butcher in #property ) || ( mittens in #property ) || ( circle in #property )
       gosub moveit
    if ( ( squirrel in #property ) || ( warrior in #property ) || ( anvil in #property ) ) && ( east in #property )
       gosub moveit
    }
 else
     {
     set %testtype #findtype
     set %testitem #findid
     call BMItemEval.euo %testitem
     set %temp9 #result
     if #result < %mineval
        ignoreitem %testitem 2
     else
         gosub moveit
     }
moved:
set #findindex #findindex + 1
}
return

sub moveit
exevent drag #findid #findstack
wait 10
exevent dropc %keeperbag
wait 10
return


